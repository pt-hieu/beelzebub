# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type LinkModel {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  url: String!
  tag: String
  alias: String!
  title: String
  image: String
  description: String
  scrapeStatus: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ConfigModel {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  unique: Boolean!
  display_name: String!
  avatar: String!
  github_token: String
}

type RepoModel {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  name: String!
  data: JSON!
  collabs: JSON!
  synced_at: DateTime!
  path: String
  outdated: Boolean!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type TodoModel {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  title: String
  content: String!
  categorization: [TodoCategorization!]!
  startTime: DateTime!
  duration: Float
  weekly: Boolean!
  remind: RemindType
  meta: JSON!
}

enum TodoCategorization {
  URGENT
  IMPORTANT
}

enum RemindType {
  FIVE_MINUTES_BEFORE
  FIFTEEN_MINUTES_BEFORE
  ONE_HOUR_BEFORE
  TWELVE_HOURS_BEFORE
}

type Query {
  config: ConfigModel!
  todoes(dto: GetManyTodo): [TodoModel!]!
  repoes: [RepoModel!]!
  repo(id: String!): RepoModel!
  links: [LinkModel!]!
}

input GetManyTodo {
  from: DateTime
  to: DateTime
}

type Mutation {
  updateConfig(updateData: UpdateConfig!): ConfigModel!
  createTodo(createTodo: CreateTodo!): TodoModel!
  updateTodo(id: String!, updateTodo: UpdateTodo!, options: UpdateTodoOptions): TodoModel!
  deleteTodo(id: String!): TodoModel!
  trigger: Boolean!
  updateRepo(id: String!, dto: UpdateRepositoryDto!): RepoModel!
  deleteRepo(id: String!): RepoModel!
  fetchCollaborators(id: String!): RepoModel!
  createRepo(dto: CreateRepositoryDto!): RepoModel!
  syncRepo: [RepoModel!]!
  purgeOutdatedRepos: [RepoModel!]!
  createLink(dto: CreateLinkDto!): LinkModel!
  updateLink(id: String!, dto: UpdateLinkDto!): LinkModel!
  deleteLink(id: String!): LinkModel!
  importLinks(source: String!, dto: ImportBookmarkDto!): [LinkModel!]!
}

input UpdateConfig {
  display_name: String
  avatar: String
  github_token: String
}

input CreateTodo {
  title: String
  content: String!
  categorization: [TodoCategorization!]!
  startTime: DateTime!
  duration: Float
  weekly: Boolean
  remind: RemindType
}

input UpdateTodo {
  title: String
  content: String
  categorization: [TodoCategorization!]
  startTime: DateTime
  duration: Float
  weekly: Boolean
  remind: RemindType
}

input UpdateTodoOptions {
  updateOnlyTarget: Boolean
  targetDate: DateTime
}

input UpdateRepositoryDto {
  is_template: Boolean
  archived: Boolean
  private: Boolean
  path: String
}

input CreateRepositoryDto {
  name: String!
}

input CreateLinkDto {
  url: String!
  tag: String
  alias: String
}

input UpdateLinkDto {
  url: String
  tag: String
  alias: String
}

input ImportBookmarkDto {
  file: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload